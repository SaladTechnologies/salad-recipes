#!/bin/bash

################################################################################################
# Salad API Functions
#
# You should `source` this file to gain access to these functions. All of them accept the
# organization, project, and container group as the first three arguments.
#
# All of them require the SALAD_API_KEY environment variable to be set.
################################################################################################

function getCurrentStatus() {
  org=$1
  project=$2
  container_group=$3
  cg=$(getContainerGroup $org $project $container_group)
  status=$(echo $cg | jq -r '.current_state.status')
  echo $status
}

function startContainerGroup() {
  org=$1
  project=$2
  container_group=$3
  baseURL="https://api.salad.com/api/public/organizations/${org}/projects/${project}/containers/${container_group}"
  curl -s -X POST \
    -H "Salad-Api-Key: $SALAD_API_KEY" \
    $baseURL/start
}

function stopContainerGroup() {
  org=$1
  project=$2
  container_group=$3
  baseURL="https://api.salad.com/api/public/organizations/${org}/projects/${project}/containers/${container_group}"
  curl -s -X POST \
    -H "Salad-Api-Key: $SALAD_API_KEY" \
    $baseURL/stop
}

function getConfiguredReplicas() {
  org=$1
  project=$2
  container_group=$3
  cg=$(getContainerGroup $org $project $container_group)
  replicas=$(echo $cg | jq -r '.replicas')
  echo $replicas
}

function setReplicas() {
  org=$1
  project=$2
  container_group=$3
  replicas=$4
  baseURL="https://api.salad.com/api/public/organizations/${org}/projects/${project}/containers/${container_group}"
  cg=$(
    curl -s -X PATCH \
      -H "Salad-Api-Key: $SALAD_API_KEY" \
      -H "Content-Type: application/merge-patch+json" \
      -d "{\"replicas\": $replicas}" \
      $baseURL
  )
}

function getRunningReplicas() {
  org=$1
  project=$2
  container_group=$3
  cg=$(getContainerGroup $org $project $container_group)
  running=$(echo $cg | jq -r '.current_state.instance_status_counts.running_count')
  echo $running
}

function getAccessDomainName() {
  org=$1
  project=$2
  container_group=$3
  cg=$(getContainerGroup $org $project $container_group)
  dns=$(echo $cg | jq -r '.networking.dns')
  echo $dns
}

function getAllPrices() {
  org=$1
  baseURL="https://api.salad.com/api/public/organizations/${org}/gpu-classes"
  data=$(
    curl -s -X GET \
      -H "Salad-Api-Key: $SALAD_API_KEY" \
      $baseURL
  )
  echo $data
}

function getContainerGroup() {
  org=$1
  project=$2
  container_group=$3
  baseURL="https://api.salad.com/api/public/organizations/${org}/projects/${project}/containers/${container_group}"
  data=$(
    curl -s -X GET \
      -H "Salad-Api-Key: $SALAD_API_KEY" \
      $baseURL
  )
  if [ -z "$data" ]; then
    echo "Container group $container_group not found"
    exit 1
  fi
  echo $data
}
