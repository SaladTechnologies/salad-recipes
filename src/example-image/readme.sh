#!/bin/bash
echo -e "Docs available at https://docs.salad.com/container-engine/guides/example-image. Unsure where to start? This image has included:\n\nExample IPv6 enabled server API with three endpoints.\n   Start it by running ./start-server.sh\n   Running a GET to / will return your randomly generated string above.\n   Running a POST to /hello with the following schema:", '{"message": "Hello"}', "will return either Goodbye or Hello depending on whether the content of the message field is 'Hello' or 'Goodbye'\n   Running a POST to /set with the following schema:", '{"set": "example_text"}', "will change the randomly generated string on the / route to a custom string of your choosing.\n\nExample Environment Variable definitions.\n   Running ./env_test.sh will echo the example defined Environment Variables defined for your container group.\n\nExample JWT retrieval from our Instance Metadata Service (IMDS).\n   Running 'python3 jwt.py' will return the current JWT inside the container. Please note, the IMDS only runs when deployed on Salad, you cannot access it when running this image locally.\n\nReadiness probe test.\n   Running ./readiness-probe.sh will disable the ready status of this container instance for 2 minutes, before returning to ready. You can check it on the deployment page for this group.\n\nLiveness probe.\n   This deployment also contains a Liveness probe, it's checking to see if the 'liveness' file exists, and as long as it remains reachable the container will stay alive. If the file disappears or becomes unavailable, the container will exit and automatically reallocate.\n\nSpeedtest.\n   This container also contains a 1GB file download internet speedtest. Run it with ./speedtest.sh. Please note, results may not be 100% accurate to download speeds with other services.\n\nCurl. Try curling!\n\nNvidia-smi. For checking that sweet sweet GPU model.\n\nPing. Try pinging a URL.\n\nNano. For editing and accidentally breaking a file.\n\nNeofetch. So you can see what you're running on.\n\nBtop. To see all running processes and system statistics.\n\nWant to know how all of these work? Run 'cat {filename}' to see the code for the various tests. "