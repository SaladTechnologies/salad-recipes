{
  "container_template": {
    "autostartPolicy": true,
    "container": {
      "environmentVariables": {},
      "image": "",
      "imageCaching": true,
      "priority": "high",
      "resources": {
        "cpu": 4,
        "gpuClasses": ["ed563892-aacd-40f5-80b7-90c9be6c759b"],
        "memory": 30720,
        "storageAmount": 268435456000
      }
    },
    "livenessProbe": {
      "failureThreshold": 6,
      "http": {
        "headers": [],
        "path": "/liveness",
        "port": 8000,
        "scheme": "http"
      },
      "initialDelaySeconds": 90,
      "periodSeconds": 10,
      "successThreshold": 1,
      "timeoutSeconds": 30
    },
    "name": "",
    "replicas": 1,
    "restartPolicy": "always",
    "readme": "# Sogni Fast Workers\n\nSaladCloud will find a qualified node, and begin the process of downloading the container image to the host machine. It may take up to tens of minutes to download to some machines, depending on the network conditions of that particular node. Remember, these are privately owned PCs with gaming GPUs in a variety of networking conditions, and performance will vary across different nodes.\n\nEventually, you will see your instance enter the running state, and show a green checkmark in the \"Ready\" column. At this time the container group will be considered running.\n\n### Resources\n\n- [Recipe Source](https://github.com/SaladTechnologies/salad-recipes/tree/master/recipes/sogni-fast-workers)\n- <Link url={`https://github.com/SaladTechnologies/salad-recipes/issues/new?title=Sogni%20Fast%20Workers&body=%3C%21---%20Please%20describe%20the%20issue%20you%20are%20having%20with%20this%20recipe%2C%20and%20include%20as%20much%20detail%20as%20possible%2C%20including%20any%20relevant%20logs.%20--%3E%0AImage%3A%20${props.container.image}`}>Report an Issue on GitHub</Link>",
    "startupProbe": {
      "failureThreshold": 120,
      "http": {
        "headers": [],
        "path": "/startup",
        "port": 8000,
        "scheme": "http"
      },
      "initialDelaySeconds": 90,
      "periodSeconds": 5,
      "successThreshold": 2,
      "timeoutSeconds": 5
    },
    "countryCodes": [
      "af",
      "al",
      "dz",
      "as",
      "ad",
      "ao",
      "ai",
      "aq",
      "ag",
      "ar",
      "am",
      "aw",
      "au",
      "at",
      "az",
      "bs",
      "bh",
      "bd",
      "bb",
      "be",
      "bz",
      "bj",
      "bm",
      "bt",
      "bo",
      "bq",
      "ba",
      "bw",
      "bv",
      "br",
      "io",
      "bn",
      "bg",
      "bf",
      "bi",
      "cv",
      "kh",
      "cm",
      "ca",
      "ky",
      "cf",
      "td",
      "cl",
      "cn",
      "cx",
      "cc",
      "co",
      "km",
      "cd",
      "cg",
      "ck",
      "cr",
      "hr",
      "cw",
      "cy",
      "cz",
      "ci",
      "dk",
      "dj",
      "dm",
      "do",
      "ec",
      "eg",
      "sv",
      "gq",
      "er",
      "ee",
      "sz",
      "et",
      "fk",
      "fo",
      "fj",
      "fi",
      "fr",
      "gf",
      "pf",
      "tf",
      "ga",
      "gm",
      "ge",
      "de",
      "gh",
      "gi",
      "gr",
      "gl",
      "gd",
      "gp",
      "gu",
      "gt",
      "gg",
      "gn",
      "gw",
      "gy",
      "ht",
      "hm",
      "va",
      "hn",
      "hk",
      "hu",
      "is",
      "in",
      "id",
      "iq",
      "ie",
      "im",
      "il",
      "it",
      "jm",
      "jp",
      "je",
      "jo",
      "kz",
      "ke",
      "ki",
      "kr",
      "kw",
      "kg",
      "la",
      "lv",
      "lb",
      "ls",
      "lr",
      "ly",
      "li",
      "lt",
      "lu",
      "mo",
      "mg",
      "mw",
      "my",
      "mv",
      "ml",
      "mt",
      "mh",
      "mq",
      "mr",
      "mu",
      "yt",
      "mx",
      "fm",
      "md",
      "mc",
      "mn",
      "me",
      "ms",
      "ma",
      "mz",
      "mm",
      "na",
      "nr",
      "np",
      "nl",
      "nc",
      "nz",
      "ni",
      "ne",
      "ng",
      "nu",
      "nf",
      "mp",
      "no",
      "om",
      "pk",
      "pw",
      "ps",
      "pa",
      "pg",
      "py",
      "pe",
      "ph",
      "pn",
      "pl",
      "pt",
      "pr",
      "qa",
      "mk",
      "ro",
      "rw",
      "re",
      "bl",
      "sh",
      "kn",
      "lc",
      "mf",
      "pm",
      "vc",
      "ws",
      "sm",
      "st",
      "sa",
      "sn",
      "rs",
      "sc",
      "sl",
      "sg",
      "sx",
      "sk",
      "si",
      "sb",
      "so",
      "za",
      "gs",
      "ss",
      "es",
      "lk",
      "sd",
      "sr",
      "sj",
      "se",
      "ch",
      "tw",
      "tj",
      "tz",
      "th",
      "tl",
      "tg",
      "tk",
      "to",
      "tt",
      "tn",
      "tr",
      "tm",
      "tc",
      "tv",
      "ug",
      "ua",
      "ae",
      "gb",
      "um",
      "us",
      "uy",
      "uz",
      "vu",
      "ve",
      "vn",
      "vg",
      "vi",
      "wf",
      "eh",
      "ye",
      "zm",
      "zw",
      "ax"
    ]
  },
  "form": {
    "title": "Sogni Fast Worker",
    "description": "Deploy Sogni Flux or Stable Diffusion workers for image generation. ",
    "type": "object",
    "required": ["container_group_name", "sogni_worker_type", "sogni_api_key", "sogni_nft_token_id"],
    "properties": {
      "container_group_name": {
        "title": "Container Group Name",
        "description": "Required* Must be 2-63 lowercase letters, numbers, or hyphens. Cannot start with a number or start or end with a hyphen.",
        "type": "string",
        "maxLength": 63,
        "minLength": 2,
        "pattern": "^[a-z][a-z0-9-]{0,61}[a-z0-9]$"
      },
      "sogni_worker_type": {
        "title": "Sogni Worker Type",
        "type": "string",
        "enum": ["flux", "stable_diffusion"],
        "default": "flux"
      },
      "sogni_api_key": {
        "title": "Sogni API Key",
        "description": "Required* Your Sogni account API key.",
        "type": "string",
        "maxLength": 1000,
        "minLength": 1
      },
      "sogni_nft_token_id": {
        "title": "Sogni NFT Token ID",
        "description": "Required* The NFT Token ID for your Sogni worker.",
        "type": "string",
        "maxLength": 1000,
        "minLength": 1
      }
    },
    "dependencies": {
      "sogni_worker_type": {
        "oneOf": [
          {
            "required": ["download_model_count"],
            "properties": {
              "sogni_worker_type": {
                "enum": ["stable_diffusion"]
              },
              "download_model_count": {
                "title": "Models to Download at Start",
                "description": "The number of Stable Diffusion models to download when the worker starts.",
                "type": "integer",
                "maximum": 100,
                "minimum": 0,
                "default": 6
              }
            }
          }
        ]
      }
    }
  },
  "patches": [
    [
      {
        "op": "copy",
        "from": "/input/autostart_policy",
        "path": "/output/autostartPolicy"
      },
      {
        "op": "copy",
        "from": "/input/replicas",
        "path": "/output/replicas"
      },
      {
        "op": "copy",
        "from": "/input/container_group_name",
        "path": "/output/name"
      },
      {
        "op": "copy",
        "from": "/input/sogni_api_key",
        "path": "/output/container/environmentVariables/API_KEY"
      },
      {
        "op": "copy",
        "from": "/input/sogni_nft_token_id",
        "path": "/output/container/environmentVariables/NFT_TOKEN_ID"
      }
    ],
    [
      {
        "op": "test",
        "path": "/input/sogni_worker_type",
        "value": "flux"
      },
      {
        "op": "add",
        "path": "/output/container/image",
        "value": "sogni/sogni-flux-worker:latest"
      }
    ],
    [
      {
        "op": "test",
        "path": "/input/sogni_worker_type",
        "value": "stable_diffusion"
      },
      {
        "op": "add",
        "path": "/output/container/image",
        "value": "sogni/sogni-stable-diffusion-worker:latest"
      },
      {
        "op": "copy",
        "from": "/input/download_model_count",
        "path": "/output/container/environmentVariables/AUTO_DOWNLOAD_TO_MIN_MODEL_COUNT"
      }
    ]
  ],
  "ui": {
    "sogni_worker_type": {
      "ui:enumNames": ["Flux", "Stable Diffusion"]
    }
  },
  "documentation_url": "https://docs.salad.com/products/recipes/sogni-fast-worker",
  "short_description": "Deploy Sogni Flux and Stable Diffusion fast workers for high-quality image generation.",
  "workload_types": ["imageGeneration", "blockchain"]
}
