name: truss event
description: does truss stuff

runs:
  using: "composite"

  steps:
    # Check if the package already exists for this version and skip the build if it does
    - name: Check for changes
      id: check_new
      run: |
        
        tags=$(curl -L \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        https://api.github.com/orgs/saladtechnologies/packages/container/recipe-${{ matrix.recipe-name }}/versions | jq -r 'try(.[0].metadata.container.tags | any(. == "${{ matrix.version }}") ) catch "false"')
        
        echo $tags
        
        # Checks to see if the specified version already exists in the packages versions
        if [ "$tags" == "false" ]; then
          echo "IS_NEW=true" >> $GITHUB_OUTPUT
          echo "It is new!!!"
        else
          echo "IS_NEW=false" >> $GITHUB_OUTPUT
          echo "This tag already exists."
        fi

    # Check out the repo
    - name: Checkout repository
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      uses: actions/checkout@v2

    # Log into GHCR
    - name: Log in to the Container registry
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Setup Python (faster than using Python container)
    - name: Setup Python
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    # Install Truss
    - name: Install Truss
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      run: |
        python -m pip install truss

    # Build truss container context
    - name: Build Truss docker image
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      run: truss build-context ./src/${{ matrix.recipe-name }}/out ./src/${{ matrix.recipe-name }}

    # Add socat and startup script to Docker image for IPv6 tunneling
    - name: Add socat to Docker image
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      run: |
        echo '#!/bin/bash' > ./src/${{ matrix.recipe-name }}/out/server/start.sh
        echo "echo 'socat TCP6-LISTEN:8888,fork TCP4:127.0.0.1:8080 &'" >> ./src/${{ matrix.recipe-name }}/out/server/start.sh
        echo 'socat TCP6-LISTEN:8888,fork TCP4:127.0.0.1:8080 &' >> ./src/${{ matrix.recipe-name }}/out/server/start.sh
        echo 'python3 /app/inference_server.py' >> ./src/${{ matrix.recipe-name }}/out/server/start.sh
        chmod +x ./src/${{ matrix.recipe-name }}/out/server/start.sh
        sed -i -r ':a; /^\s*$/ {N;ba}; s/( *\n *){2,}/\n\n/' ./src/${{ matrix.recipe-name }}/out/Dockerfile
        sed -i '/COPY .\/server_requirements.txt.*/i # Salad Recipes require IPv6 tunnels\nRUN apt update\nRUN apt install -y socat\n' ./src/${{ matrix.recipe-name }}/out/Dockerfile
        sed -i 's/^\(CMD exec python3 \/app.*\)/# \1\n\nCMD bash start.sh/' ./src/${{ matrix.recipe-name }}/out/Dockerfile

    # Get meta data
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ghcr.io/saladtechnologies/recipe-${{ matrix.recipe-name }}:${{ matrix.version }}

    # Create and push image
    - name: Build and push Docker image
      if: ${{ steps.check_new.outputs.IS_NEW == 'true' }}
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context:  ./src/${{ matrix.recipe-name }}/out
        push: true
        tags: ghcr.io/saladtechnologies/recipe-${{ matrix.recipe-name }}:${{ matrix.version }}
        labels: ${{ steps.meta.outputs.labels }}
