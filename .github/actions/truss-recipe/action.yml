name: truss event
description: does truss stuff
inputs:
  recipe-name:
    description: targeted thing
    required: true
  version:
    description: version
    required: true
  repo-token:
    description: token
    required: true

runs:
  using: "composite"

  steps:
    # Check out the repo
    - name: Checkout repository
      uses: actions/checkout@v2

    # Log into GHCR
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ inputs.repo-token }}

    # Setup Python (faster than using Python container)
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    # Install Truss
    - name: Install Truss
      shell: bash
      run: |
        python -m pip install truss

    # Build truss container context
    - name: Build Truss docker image
      shell: bash
      run: truss build-context ./src/${{ inputs.recipe-name }}/out ./src/${{ inputs.recipe-name }}

    # Add socat and startup script to Docker image for IPv6 tunneling
    - name: Add socat to Docker image
      shell: bash
      run: |
        echo '#!/bin/bash' > ./src/${{ inputs.recipe-name }}/out/server/start.sh
        echo "echo 'socat TCP6-LISTEN:8888,fork TCP4:127.0.0.1:8080 &'" >> ./src/${{ inputs.recipe-name }}/out/server/start.sh
        echo 'socat TCP6-LISTEN:8888,fork TCP4:127.0.0.1:8080 &' >> ./src/${{ inputs.recipe-name }}/out/server/start.sh
        echo 'python3 /app/inference_server.py' >> ./src/${{ inputs.recipe-name }}/out/server/start.sh
        chmod +x ./src/${{ inputs.recipe-name }}/out/server/start.sh
        sed -i -r ':a; /^\s*$/ {N;ba}; s/( *\n *){2,}/\n\n/' ./src/${{ inputs.recipe-name }}/out/Dockerfile
        sed -i '/COPY .\/server_requirements.txt.*/i # Salad Recipes require IPv6 tunnels\nRUN apt update\nRUN apt install -y socat\n' ./src/${{ inputs.recipe-name }}/out/Dockerfile
        sed -i 's/^\(CMD exec python3 \/app.*\)/# \1\n\nCMD bash start.sh/' ./src/${{ inputs.recipe-name }}/out/Dockerfile

    # Get meta data
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ghcr.io/saladtechnologies/recipe-${{ inputs.recipe-name }}:${{ inputs.version }}

    # Create and push image
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context:  ./src/${{ inputs.recipe-name }}/out
        push: true
        tags: ghcr.io/saladtechnologies/recipe-${{ inputs.recipe-name }}:${{ inputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
